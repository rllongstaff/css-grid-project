/* can position items multiple ways

grid-row-start: 1;
grid-row-end: 2;
grid-column-start: 1;
grid-column-end: 2;

will place the item in the top left cell

can shorthand that with 

grid-row: 1 / 2;
grid-column: 1 / 2;

Can also write

grid-row 1 / 3;

to instead read

grid-row 1 / span 2;


can also use grid-area instead of the four values above

grid-area: 1 / 1 / 2 / 2;

where

grid-area: row start / column start/ row end / column end

*/

.defined-grid-fixed-cols { 
    display: grid; 
    grid-template-columns: 200px 200px 200px 200px;   

    grid-gap: 1rem;  

    margin: 3rem auto;
    width: 80%;
}

.defined-grid-fluid-cols {
    display: grid;
    grid-template-columns: 20% auto repeat(2, 1fr);
    grid-gap: 1rem;

    margin: 3rem auto;
    width: 80%;
}

.item {
    background-color: rgba($color-tertiary, .9); 
    border-radius: 3px;  
}